q
c
Contact.first
Contact.create(forename: row[0], surname: row[1], email: row[2], phone: row[3])
      )
        phone: row[3]
        email: row[2],
        surname: row[1],
        forename: row[0],
      Contact.create(
Contact.collection.insert_on(row)
Contact.collection.insert(row)
Contact.collection
Contact
row
row[1]
row
c
spreadsheets.each { |s| puts s.title }
spreadsheets.each { |s| s.title }
spreadsheets[0]
spreadsheets = test.spreadsheets(corpus: "DEFAULT", maxResults: 5, orderBy: "modifiedByMeDate desc")
    spreadsheets = test.spreadsheets(corpus: DEFAULT, maxResults: 5, orderBy: "modifiedByMeDate desc")
    spreadsheets = session.spreadsheets(corpus: DEFAULT, maxResults: 5, orderBy: "modifiedByMeDate desc")
test.spreadsheets(corpus: "DEFAULT", orderBy: "modifiedByMeDate desc", maxResults: 3)
test.spreadsheets(corpus: "DEFAULT", orderBy: "modifiedByMeDate", maxResults: 3)
test.spreadsheets(corpus: "DEFAULT", orderBy: "recency,modifiedByMeDate", maxResults: 3)
test.spreadsheets(corpus: "DEFAULT", orderBy: "recency,lastViewedByMeDate", maxResults: 3)
test.spreadsheets(corpus: "DEFAULT", orderBy: "lastViewedByMeDate", maxResults: 3)
test.spreadsheets(corpus: "DEFAULT", orderby: "lastViewedByMeDate", maxResults: 3)
test.spreadsheets(corpus: "DEFAULT", orderby: "lastViewedByMeDate")
test.spreadsheets(corpus: DEFAULT, orderby: "lastViewedByMeDate")
test.spreadsheets(corpus: "default", orderby: "lastViewedByMeDate")
test.spreadsheets(orderby: "lastViewedByMeDate")
test.spreadsheets(orderby: "lastViewedByMeDate").limit(5)
test.spreadsheets
test.files("q" => "thrones").first(3)
test.files(q: "thrones").first(3)
test.files("orderby" => "lastViewedByMeDate").first(3)
test.files(orderby: "lastViewedByMeDate").first(3)
test.files(orderby: "lastViewedByMe").first(3)
test.files(orderby: "recency").first(3)
test.files(orderby: "recency").
test.files(orderby: "recency").limit(5)
test.files(orderby: "recency").count
test.files.count
test.files
test.spreadsheet_by_key("1P3FkusfgedBxxTJI3wcvf4PDUbDR7lWVYDGclAoIGzM")
test = GoogleDrive.login_with_oauth(oauth["credentials"]["token"])
GoogleDrive.login_with_oauth(oauth["credentials"]["token"])
oauth["credentials"]["token"]
oauth["token"]
oauth["access_token"]
oauth = request.env["omniauth.auth"]
oauth
session.files.each { |file| p file.title }
session.files.each do |file|
session = GoogleDrive.saved_session
session.files
session
session.drive
drive
session.files_list
session.files
files
fies
session.read
session.spreadsheet
session.spreadsheets
session
GoogleDrive.saved_session
GoogleDrive.class
GoogleDrive.class?
GoogleDrive
c
s["name"]
s = request.env["omniauth.auth"]["info"]
s = request.env["omniauth.auth"]["info"]["name"]
s = request.env["omniauth.auth"]["info"]["first_name"]
s = request.env["omniauth.auth"]["info"]
s = request.env["omniauth.auth"].to_yaml
s
o
s = request.env["omniauth.auth"]
